#include<iostream>
using namespace std;

void merge(int *arr, int s, int e)
{
    int mid = s + (e-s)/2;
    int len1 = mid-s+1;
    int len2 = e-mid;

    int *first = new int[len1];
    int *second = new int[len2];

    int index = s;

    for(int i=0;i<len1;i++)
    {
        first[i] = arr[index++];
    }

    index = mid+1;

    for(int i=0;i<len2;i++)
    {
        second[i] = arr[index++];
    }

    // merge two arrays in a sorted manner
    int index1 = 0;
    int index2 = 0;
    index = s;

    while(index1<len1 && index2<len2)
    {
        if(first[index1] < second[index2])
        {
            arr[index++] = first[index1++];
        }
        else
        {
            arr[index++] = second[index2++];
        }
    }

    while(index1 < len1)
    {
        arr[index++] = first[index1++];
    }
    while(index2 < len2)
    {
        arr[index++] = second[index2++];
    }

    delete[] first;
    delete[] second;
}

void merge_sort(int *arr, int s, int e)
{
    if(s>=e)
        return;

    int mid = s + (e-s)/2;

    // The left part of the array
    merge_sort(arr, s, mid);
    // The right part of the array
    merge_sort(arr, mid+1, e);
    // merging the above two arrays
    merge(arr, s, e);
}

int main()
{
    int arr[8] = {3,2,4,1,6,5,8,9};
    int n = 8;

    merge_sort(arr, 0, n-1);

    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    return 0;
}
