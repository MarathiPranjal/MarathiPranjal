#include<iostream>
using namespace std;

int partition(int *arr, int st, int en)
{
    int pivot = arr[st];
    int count = 0;

    for(int i=st+1;i<=en;i++)
    {
        if(pivot >= arr[i])
        {
            count++;
        }
    }

    // place pivot at right position
    int pivotIndex = st + count;
    swap(arr[pivotIndex], arr[st]);

    // taking care of left and right part
    int i = st, j = en;

    while(i<pivotIndex && j>pivotIndex)
    {
        while(arr[i] < pivot)
        {
            i++;
        }
        while(arr[j] > pivot)
        {
            j--;
        }

        if(i < pivotIndex && j > pivotIndex)
        {
            swap(arr[i++], arr[j--]);
        }
    }
    return pivotIndex;
}

void quick_sort(int *arr, int st, int en)
{
    // base case
    if(st>=en)
        return;

     // partition
    int p = partition(arr, st, en);

    // left part sorting
    quick_sort(arr, st, p-1);
    // right part sorting
    quick_sort(arr, p+1, en);
}

int main()

{
    int arr[11] = {2,4,1,6,9,9,4,3,1,6,8};
    int n = 11;

    quick_sort(arr, 0, n-1);

    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    return 0;
}
